import 'package:flutter/material.dart';

void main() {
  runApp(const MaterialApp(home: ServicePackageScreen()));
}

class ServicePackageScreen extends StatefulWidget {
  const ServicePackageScreen({super.key});

  @override
  State<ServicePackageScreen> createState() => _ServicePackageScreenState();
}

class _ServicePackageScreenState extends State<ServicePackageScreen> {
  int totalPrice = 0;

  final List<Map<String, dynamic>> dogServices = [
    {"title": "G√≥i c·∫Øt t·ªâa l√¥ng, m√≥ng, t·∫Øm s·∫•y", "price": 150000},
    {"title": "Combo c·∫Øt t·ªâa, t·∫Øm, kh√°m s·ª©c kh·ªèe", "price": 200000},
    {"title": "T·∫°o ki·ªÉu l√¥ng, spa, ti√™m vaccine", "price": 250000},
  ];

  final List<Map<String, dynamic>> catServices = [
    {"title": "C·∫Øt t·ªâa l√¥ng, nhu·ªôm l√¥ng th·ªùi trang", "price": 200000},
    {"title": "Combo c·∫Øt t·ªâa, spa, ti√™m vaccine", "price": 250000},
  ];

  final List<Map<String, dynamic>> supplements = [
    {"title": "Vitamin t·ªïng h·ª£p cho ch√≥ m√®o", "price": 300000},
    {"title": "Thu·ªëc t·∫©y giun d·∫°ng n∆∞·ªõc, x·ªï giun cho ch√≥ m√®o", "price": 200000},
    {"title": "Thu·ªëc ti√™u h√≥a ti√™u ch·∫£y d√†nh cho ch√≥ m√®o", "price": 150000},
  ];

  final List<Map<String, dynamic>> tools = [
    {"title": "Spa, T·∫Øm S·∫•y, Tri·ªát s·∫£n", "price": 100000},
    {"title": "T·∫©y giun d·∫°ng vi√™n, x·ªï giun cho ch√≥ m√®o", "price": 20000},
    {"title": "S·ªØa t·∫Øm tr·ªã ve, r·∫≠n cho ch√≥ m√®o", "price": 350000},
    {"title": "Tu√Ωp kem b√¥i vi√™m da, n·∫•m da", "price": 40000},
    {"title": "Men ti√™u h√≥a", "price": 10000},
    {"title": "Chai x·ªãt di·ªát b·ªç ch√©t 300ml", "price": 50000},
  ];

  void addToCart(int price) {
    setState(() {
      totalPrice += price;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("C√°c g√≥i d·ªãch v·ª• & ƒë∆°n thu·ªëc", style: TextStyle(color: Colors.black)),
        centerTitle: true,
        elevation: 0,
        backgroundColor: Colors.transparent,
        leading: const BackButton(color: Colors.black),
        flexibleSpace: Container(
          decoration: const BoxDecoration(
            gradient: LinearGradient(
              colors: [Color(0xFFEFD4F5), Color(0xFF83F1F5)],
              begin: Alignment.topLeft,
              end: Alignment.bottomRight,
            ),
          ),
        ),
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView(
              children: [
                _buildCategoryTitle("üê∂ D·ªãch v·ª• d√†nh cho ch√≥:"),
                ...dogServices.map(_buildServiceItem).toList(),

                const Divider(thickness: 8, color: Colors.grey),
                _buildCategoryTitle("üê± D·ªãch v·ª• d√†nh cho m√®o:"),
                ...catServices.map(_buildServiceItem).toList(),

                const Divider(thickness: 8, color: Colors.grey),
                _buildCategoryTitle("üíä Thu·ªëc & th·ª±c ph·∫©m b·ªï sung:"),
                ...supplements.map(_buildServiceItem).toList(),

                const Divider(thickness: 8, color: Colors.grey),
                _buildCategoryTitle("üß¥ Thu·ªëc v√† d·ª•ng c·ª• chƒÉm s√≥c ch√≥ m√®o:"),
                ...tools.map(_buildServiceItem).toList(),
              ],
            ),
          ),

          Container(
            padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
            decoration: const BoxDecoration(
              border: Border(top: BorderSide(color: Colors.grey)),
              color: Colors.white,
            ),
            child: Row(
              children: [
                Expanded(
                  child: Text(
                    "T·ªïng thanh to√°n\n${_formatCurrency(totalPrice)} VND",
                    style: const TextStyle(
                      fontWeight: FontWeight.bold,
                      color: Colors.red,
                    ),
                  ),
                ),
                ElevatedButton(
                  style: ElevatedButton.styleFrom(
                    backgroundColor: Colors.orange,
                    padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 14),
                  ),
                  onPressed: () {
                    // Chuy·ªÉn sang m√†n h√¨nh gi·ªè h√†ng
                  },
                  child: const Text("Xem gi·ªè h√†ng"),
                )
              ],
            ),
          )
        ],
      ),
    );
  }

  Widget _buildCategoryTitle(String title) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
      child: Text(
        title,
        style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16),
      ),
    );
  }

  Widget _buildServiceItem(Map<String, dynamic> item) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
      child: Row(
        children: [
          Container(
            width: 60,
            height: 60,
            color: Colors.grey[300], // Placeholder image
          ),
          const SizedBox(width: 12),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(item["title"], style: const TextStyle(fontWeight: FontWeight.w500)),
                const SizedBox(height: 4),
                Text(
                  "${_formatCurrency(item["price"])}ƒë",
                  style: const TextStyle(color: Colors.red, fontWeight: FontWeight.bold),
                ),
                const Text("Xem chi ti·∫øt", style: TextStyle(fontSize: 12, color: Colors.grey)),
              ],
            ),
          ),
          IconButton(
            onPressed: () {
              addToCart(item["price"]);
            },
            icon: const Icon(Icons.add_circle_outline, color: Colors.deepOrange),
          ),
        ],
      ),
    );
  }

  String _formatCurrency(int value) {
    return value.toString().replaceAllMapped(
        RegExp(r'(\d)(?=(\d{3})+(?!\d))'), (Match m) => '${m[1]}.');
  }
}
